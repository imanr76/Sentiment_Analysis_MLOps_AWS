import dotenvimport boto3import sagemakerfrom sagemaker.pytorch.estimator import PyTorch as PytorchEstimatorimport osdotenv.load_dotenv()role = os.getenv("ROLE")profile_name  = os.getenv("AWS_PROFILE")boto3_session = boto3.session.Session(profile_name = profile_name)sagemaker_Sess = sagemaker.Session(boto_session = boto3_session)train_instance_count = 1train_instance_type = "ml.m5.xlarge"region = sagemaker_Sess.boto_region_namebucket = sagemaker_Sess.default_bucket()hyperparameters = {                    "embed_dim" : 3,                    "lstm_size" : 3,                    "bidirectional" : False,                    "num_layers" : 1,                    "dropout" : 0,                    "learning_rate" : 0.001,                    "epochs" : 1,                    "threshold" : 0.5                    }data_channels = {"train" : "s3://" + bucket + "/data/training/",                 "validation" : "s3://" + bucket + "/data/validation/",                 "test" : "s3://" + bucket + "/data/test/",                 "vocabulary" : "s3://" + bucket + "/models/vocabulary/"}estimator = PytorchEstimator(                            entry_point = "training.py",                            framework_version = "1.13",                            py_version = "py39",                            role = role,                            instance_count = train_instance_count,                            instance_type = train_instance_type,                            hyperparameters = hyperparameters,                            input_mode = 'File',                            output_path = "s3://" + bucket + "/models/",                            sagemaker_session = sagemaker_Sess                            )estimator.fit(inputs = data_channels, logs = True)